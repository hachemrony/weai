name: Smoke (providers)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'  # daily @ 09:00 UTC (optional)

jobs:
  seedream4:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # map secrets to env (safe; step-level gating still needed)
    env:
      SEEDREAM_API_BASE: ${{ secrets.SEEDREAM_API_BASE }}
      SEEDREAM_API_KEY:  ${{ secrets.SEEDREAM_API_KEY }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }

      # Gate: set RUN=1 only when both secrets exist
      - name: Gate provider (seedream4)
        run: |
          if [ -n "${SEEDREAM_API_BASE}" ] && [ -n "${SEEDREAM_API_KEY}" ]; then
            echo "RUN=1" >> "$GITHUB_ENV"
          else
            echo "RUN=0" >> "$GITHUB_ENV"
            echo "Skipping seedream4: missing secrets."
          fi

      - name: Install deps
        if: env.RUN == '1'
        run: npm ci

      - name: Make smoke script executable
        if: env.RUN == '1'
        run: chmod +x scripts/smoke-visuals-both.sh

      - name: Start server (seedream4)
        if: env.RUN == '1'
        env:
          HOST: 127.0.0.1
          PORT: 3000
          NODE_ENV: test
          VISUAL_PROVIDER: seedream4
          PROV: seedream4
          # keep CI happy even if code touches OpenAI paths
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ENABLE: '"false"'
          MOD_ENABLE: '"false"'
        run: |
          node src/server.js > server.log 2>&1 & echo $! > server.pid

      - name: Wait for port
        if: env.RUN == '1'
        run: npx --yes wait-on@7 -t 60000 tcp:127.0.0.1:3000 || (echo '---- server.log ----'; cat server.log; exit 1)

      - name: Smoke (seedream4)
        if: env.RUN == '1'
        env:
          BASE: http://127.0.0.1:3000/api/v1
          VISUAL_PROVIDER: seedream4
        run: bash scripts/smoke-visuals-both.sh

      - name: Stop server
        if: always()
        run: kill -9 $(cat server.pid) || true


  nanobanana:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # map secrets to env (safe; step-level gating still needed)
    env:
      NANOBANANA_API_URL: ${{ secrets.NANOBANANA_API_URL }}
      NANOBANANA_API_KEY: ${{ secrets.NANOBANANA_API_KEY }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }

      # Gate: set RUN=1 only when both secrets exist
      - name: Gate provider (nanobanana)
        run: |
          if [ -n "${NANOBANANA_API_URL}" ] && [ -n "${NANOBANANA_API_KEY}" ]; then
            echo "RUN=1" >> "$GITHUB_ENV"
          else
            echo "RUN=0" >> "$GITHUB_ENV"
            echo "Skipping nanobanana: missing secrets."
          fi

      - name: Install deps
        if: env.RUN == '1'
        run: npm ci

      - name: Make smoke script executable
        if: env.RUN == '1'
        run: chmod +x scripts/smoke-visuals-both.sh

      - name: Start server (nanobanana)
        if: env.RUN == '1'
        env:
          HOST: 127.0.0.1
          PORT: 3000
          NODE_ENV: test
          VISUAL_PROVIDER: nanobanana
          PROV: nanobanana
          # keep CI happy even if code touches OpenAI paths
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_ENABLE: '"false"'
          MOD_ENABLE: '"false"'
        run: |
          node src/server.js > server.log 2>&1 & echo $! > server.pid

      - name: Wait for port
        if: env.RUN == '1'
        run: npx --yes wait-on@7 -t 60000 tcp:127.0.0.1:3000 || (echo '---- server.log ----'; cat server.log; exit 1)

      - name: Smoke (nanobanana)
        if: env.RUN == '1'
        env:
          BASE: http://127.0.0.1:3000/api/v1
          VISUAL_PROVIDER: nanobanana
        run: bash scripts/smoke-visuals-both.sh

      - name: Stop server
        if: always()
        run: kill -9 $(cat server.pid) || true

