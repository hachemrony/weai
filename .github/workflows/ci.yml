name: CI

on:
  push:
  pull_request:

# Quick hardening
permissions:
  contents: read
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  node:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      HOST: 127.0.0.1
      PORT: 13800
      NODE_ENV: development
      # keep proxies empty so localhost calls arenâ€™t intercepted
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      NO_PROXY: "localhost,127.0.0.1,::1"
      SKIP_MODERATION: "1"
      # boolean flag so we can skip smoke if there is no key
      HAS_OPENAI: ${{ secrets.OPENAI_API_KEY != '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      # Only write OPENAI_API_KEY into the environment if it actually exists
      - name: Export OpenAI key (if present)
        if: env.HAS_OPENAI == 'true'
        run: echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> "$GITHUB_ENV"

      - name: Install deps
        run: npm ci

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Start server (background)
        run: |
          # make sure no proxies interfere with localhost
          unset http_proxy https_proxy no_proxy HTTP_PROXY HTTPS_PROXY NO_PROXY ALL_PROXY all_proxy
          nohup npm run start > server.log 2>&1 &
          echo $! > server.pid
          echo "PID: $(cat server.pid)"

      - name: Wait for health (max 90s)
        run: |
          for i in $(seq 1 90); do
            if curl -fsS --max-time 1 "http://127.0.0.1:${PORT}/api/v1/health" >/dev/null; then
              echo "Server is healthy"; exit 0
            fi
            sleep 1
          done
          echo "---- server.log (tail) ----"
          tail -n 120 server.log || true
          echo "::error::Health check timed out"; exit 1

      # Extra sanity: verify process & port listeners
      - name: Check server status
        run: |
          echo "---- ps ----"
          ps -ef | grep -E "node .*src/server.js" | grep -v grep || true
          echo "---- listeners ----"
          sudo ss -ltnp || true
          echo "---- last 80 lines of server.log ----"
          tail -n 80 server.log || true

      # Only run smoke when an OPENAI key is present
      - name: Smoke
        if: env.HAS_OPENAI == 'true'
        run: npm run smoke

      - name: Lint
        run: npm run lint

      - name: Upload server.log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log
          if-no-files-found: ignore

      - name: Stop server (always)
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill -TERM "$(cat server.pid)" >/dev/null || true
            sleep 2
            kill -KILL "$(cat server.pid)" >/dev/null || true
          fi
