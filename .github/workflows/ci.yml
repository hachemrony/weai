name: CI

on:
  push:
  pull_request:

jobs:
  node:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      HOST: 0.0.0.0         # bind on all interfaces (safe in GH runner)
      PORT: 13880
      NODE_ENV: development
      HTTP_PROXY: ""        # hard-disable proxies in runner
      HTTPS_PROXY: ""
      NO_PROXY: "127.0.0.1,localhost"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Start server (background)
        shell: bash
        run: |
          npm run start > server.log 2>&1 &
          echo $! > server.pid
          echo "Server PID: $(cat server.pid)"

      - name: Wait for health (max 60s)
        shell: bash
        run: |
          for i in {1..60}; do
            if env -u HTTP_PROXY -u HTTPS_PROXY -u http_proxy -u https_proxy -u ALL_PROXY -u all_proxy \
                 NO_PROXY="127.0.0.1,localhost" \
                 curl --noproxy "*" -fsS "http://127.0.0.1:${PORT}/api/v1/health" >/dev/null; then
              echo "Server is healthy"; exit 0
            fi
            sleep 1
          done
          echo "::error::Health check timed out"
          echo "----- server.log (tail) -----"
          tail -n +1 server.log
          exit 1

      - name: Smoke
        run: npm run smoke

      - name: Lint
        run: npm run lint

      - name: Upload server log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log

      - name: Cleanup (always)
        if: always()
        shell: bash
        run: |
          if [[ -f server.pid ]]; then kill "$(cat server.pid)" 2>/dev/null || true; fi
          pkill -f "node src/server.js" 2>/dev/null || true
