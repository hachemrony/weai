name: CI

on:
  push:
  pull_request:

jobs:
  node:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      HOST: 127.0.0.1
      PORT: 13800
      NODE_ENV: development
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # <-- must exist in repo Settings → Actions → Secrets
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      NO_PROXY: "localhost,127.0.0.1,::1"
      SKIP_MODERATION: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Start server (background)
        run: |
          # make sure no proxies interfere with localhost
          unset http_proxy https_proxy no_proxy HTTP_PROXY HTTPS_PROXY NO_PROXY ALL_PROXY all_proxy
          nohup npm run start > server.log 2>&1 &
          echo $! > server.pid
          sleep 1
          echo "PID: $(cat server.pid)"

      - name: Wait for health (max 90s)
        run: |
          for i in {1..90}; do
            if curl -fsS "http://127.0.0.1:${PORT}/api/v1/health" >/dev/null; then
              echo "Server is healthy"; exit 0
            fi
            # every 5s show a tail to help debugging live
            if (( i % 5 == 0 )); then
              echo "--- server.log (tail) ---"
              tail -n 50 server.log || true
            fi
            sleep 1
          done
          echo "::error::Health check timed out"
          echo "--- server.log (full) ---"
          cat server.log || true
          exit 1

      - name: Smoke
        run: npm run smoke

      - name: Lint
        run: npm run lint

      - name: Upload server.log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log

      - name: Stop server (always)
        if: always()
        run: |
          if [[ -f server.pid ]]; then
            kill -TERM "$(cat server.pid)" 2>/dev/null || true
            sleep 2
            kill -KILL "$(cat server.pid)" 2>/dev/null || true
          fi
